---
import Layout from '../layouts/Layout.astro';
import StaticHeader from '../components/StaticHeader.astro';
import InstagramFloatingButton from '../components/InstagramFloatingButton.astro';
import Badge from '../components/Badge.astro';
import Authors from '../components/Authors.astro';

export async function getStaticPaths() {
  const posts = await Astro.glob('../content/posts/*.md');
  
  return posts.map((post) => {
    const fileName = post.file.split('/').pop().replace('.md', '');
    const slug = fileName.replace(/^\d+\./, '');
    
    return {
      params: { slug },
      props: { post }
    };
  });
}

const { post } = Astro.props;
---

<Layout title={`${post.frontmatter.title} - Ajedrez FAMAF`} description={post.frontmatter.title}>
  <main class="min-h-screen relative">
    <InstagramFloatingButton />
    
    <StaticHeader />
    
    <div class="relative mx-auto max-w-4xl px-4 sm:px-6 lg:px-8 py-2 sm:py-8">
      <article class="prose prose-lg max-w-none">
        <div class="mb-8">
          <h1 class="text-4xl font-bold mb-4">{post.frontmatter.title}</h1>
          <div class="flex items-center gap-4 text-gray-600 mb-6">
            <span>{post.frontmatter.date}</span>
            <Badge label={post.frontmatter.version} />
          </div>
        </div>
        
        <div class="document" set:html={post.compiledContent()} />
        
        {post.frontmatter.authors && <Authors authors={post.frontmatter.authors} />}
        
        <div class="mt-16 pt-8 border-t border-gray-200 flex items-center justify-between">
          <a 
            href="/" 
            class="inline-flex items-center text-primary hover:text-primary/80 transition-colors"
          >
            <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18"></path>
            </svg>
            Volver al inicio
          </a>
          
          <button 
            id="copyButton"
            class="inline-flex items-center text-primary hover:text-primary/80 transition-colors border border-sky-400 px-4 py-2 rounded-lg"
          >
            <svg id="copyIcon" class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z"></path>
            </svg>
            <span id="copyText">Copiar URL</span>
          </button>
        </div>
      </article>
    </div>
    
    <!-- Footer con Gonza -->
    <section class="relative mx-auto max-w-5xl px-4 sm:px-6 lg:px-8 py-8 mt-8">
      <div class="text-center">
        <a
          class="inline-flex items-center text-yellow-500 hover:shadow-text transition-all text-lg"
          href="https://gonza.gr"
          target="_blank"
          rel="noopener noreferrer"
        >
          ðŸ’» ðŸ§‰ Desarrollado por Gonza
        </a>
      </div>
    </section>
  </main>
</Layout>

<script>
  // FunciÃ³n para copiar la URL
  const copyButton = document.getElementById('copyButton');
  const copyIcon = document.getElementById('copyIcon');
  const copyText = document.getElementById('copyText');
  
  copyButton?.addEventListener('click', async () => {
    try {
      const baseUrl = window.location.origin + window.location.pathname;
      await navigator.clipboard.writeText(baseUrl);
      
      // Cambiar el texto e Ã­cono temporalmente
      copyText.textContent = 'Â¡Copiado!';
      copyIcon.innerHTML = '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>';
      copyButton.classList.add('text-green-600', 'border-green-400');
      
      setTimeout(() => {
        copyText.textContent = 'Copiar URL';
        copyIcon.innerHTML = '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z"></path>';
        copyButton.classList.remove('text-green-600', 'border-green-400');
      }, 2000);
    } catch (err) {
      console.error('Error al copiar URL:', err);
    }
  });
</script>

<style>
  .document {
    @apply max-w-none prose-h3:mb-4 prose-h3:text-base prose-h3:leading-6 prose-sm prose prose-pre:text-base prose-slate prose-a:font-semibold prose-a:text-primary hover:prose-a:text-sky-600;
  }

  .document a[href^="http"] {
    target: _blank;
  }
</style>
